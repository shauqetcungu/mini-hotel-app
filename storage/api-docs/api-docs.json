{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel OpenApi Demo Documentation",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/hotels": {
            "get": {
                "tags": [
                    "Hotels"
                ],
                "summary": "Get list of hotels",
                "description": "Returns list of hotels",
                "operationId": "getHotelsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HotelResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Hotels"
                ],
                "summary": "Store new hotel",
                "description": "Returns hotel data",
                "operationId": "storeHotel",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HotelRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Hotel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/hotels/{id}": {
            "get": {
                "tags": [
                    "Hotels"
                ],
                "summary": "Get hotel information",
                "description": "Returns hotel data",
                "operationId": "getHotelById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Hotel id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Hotel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Hotels"
                ],
                "summary": "Update existing hotel",
                "description": "Returns updated hotel data",
                "operationId": "updateHotel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Hotel id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HotelRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Hotel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Hotels"
                ],
                "summary": "Delete existing hotel",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteHotel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Hotel id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/v1/hotels/{searchKeword}/search": {
            "get": {
                "tags": [
                    "Hotels"
                ],
                "summary": "Get searched hotel",
                "description": "Returns hotel data",
                "operationId": "getSearchedHotel",
                "parameters": [
                    {
                        "name": "searchKeword",
                        "in": "path",
                        "description": "Keyword ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Hotel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/hotels/{id}/book": {
            "put": {
                "tags": [
                    "Hotels"
                ],
                "summary": "Book existing hotel",
                "description": "Returns updated hotel data",
                "operationId": "bookHotel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Hotel id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Hotel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/v1/locations": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get list of locations",
                "description": "Returns list of locations",
                "operationId": "getLocationsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocationResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Locations"
                ],
                "summary": "Store new location",
                "description": "Returns location data",
                "operationId": "storeLocation",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LocationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/locations/{id}": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get location information",
                "description": "Returns location data",
                "operationId": "getLocationById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Location id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Locations"
                ],
                "summary": "Update existing location",
                "description": "Returns updated location data",
                "operationId": "updateLocation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Location id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LocationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Locations"
                ],
                "summary": "Delete existing location",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteLocation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Location id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/v1/locations/{searchKeword}/search": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get searched location",
                "description": "Returns location data",
                "operationId": "getSearchedLocation",
                "parameters": [
                    {
                        "name": "searchKeword",
                        "in": "path",
                        "description": "Keyword ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "HotelRequest": {
                "title": "Store Hotel request",
                "description": "Store Hotel request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "LocationRequest": {
                "title": "Store Location request",
                "description": "Store Location request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "Hotel": {
                "title": "Hotel",
                "description": "Hotel model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new hotel",
                        "type": "string",
                        "example": "Splendid"
                    },
                    "rating": {
                        "title": "Rating",
                        "description": "Rating of the hotel",
                        "type": "integer",
                        "example": "5"
                    },
                    "category": {
                        "title": "Category",
                        "description": "Category of the hotel",
                        "type": "string",
                        "example": "resort"
                    },
                    "reputation": {
                        "title": "Reputation",
                        "description": "Reputation of the hotel",
                        "type": "integer",
                        "example": "700"
                    },
                    "price": {
                        "title": "Price",
                        "description": "Price of the hotel",
                        "type": "number",
                        "format": "double",
                        "example": "1000"
                    },
                    "availability": {
                        "title": "Availability",
                        "description": "Availability of the hotel",
                        "type": "integer",
                        "example": "10"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "location_id": {
                        "title": "Location ID",
                        "description": "Location ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "location": {
                        "$ref": "#/components/schemas/Location"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Hotel"
                }
            },
            "Location": {
                "title": "Location",
                "description": "Location model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "city": {
                        "title": "City",
                        "description": "City of the new location",
                        "type": "string",
                        "example": "Podgorica"
                    },
                    "state": {
                        "title": "State",
                        "description": "State of the new location",
                        "type": "string",
                        "example": "Montenegro"
                    },
                    "country": {
                        "title": "Country",
                        "description": "Country of the location",
                        "type": "string",
                        "example": "Montenegro"
                    },
                    "address": {
                        "title": "address",
                        "description": "address of the location",
                        "type": "string",
                        "example": "Ulica Slobode"
                    },
                    "zip_code": {
                        "title": "zip_code",
                        "description": "zip_code of the location",
                        "type": "string",
                        "example": "81000"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Location"
                }
            },
            "HotelResource": {
                "title": "HotelResource",
                "description": "Hotel resource",
                "xml": {
                    "name": "HotelResource"
                }
            },
            "LocationResource": {
                "title": "LocationResource",
                "description": "Location resource",
                "xml": {
                    "name": "LocationResource"
                }
            }
        }
    },
    "security": [
        []
    ]
}